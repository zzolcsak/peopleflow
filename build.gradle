plugins {
	id 'org.springframework.boot' version '2.4.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.openapi.generator' version "4.3.1"
	id 'java'
}

group = 'com.pplflw'
version = '1.0.0-RELEASE'
project.sourceCompatibility = '11'
rootProject.name = 'peopleflow'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'io.swagger.parser.v3:swagger-parser:2.0.20'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.mockito:mockito-core'
}

test {
	useJUnitPlatform()
}

// generate models and endpoint for the peopleflow contract
openApiGenerate {
	generatorName = "spring"
	inputSpec = "$projectDir/src/main/resources/peopleflow-openapi-contracts.yaml"
	outputDir = "$buildDir/generated"
	apiPackage = "com.pplflw.peopleflow.api"
	invokerPackage = "com.pplflw.peopleflow"
	modelPackage = "com.pplflw.peopleflow.models"
	configOptions = [
		dateLibrary: "java8",
		interfaceOnly: "true", // don't create an entire spring application
	]
}

compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir "$buildDir/generated/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/generated/src/main/resources"