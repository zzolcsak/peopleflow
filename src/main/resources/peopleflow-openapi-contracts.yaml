openapi: "3.0.0"
info:
  version: 1.0.0
  title: People Flow
servers:
  - url: http://localhost:8080
paths:
  /employee:
    post:
      summary: creates a new employee. its state will be ADDED.
      requestBody:
        description: employee information
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Employee"
      operationId: employeeCreate
      tags:
        - employee
      responses:
        '201':
          description: Details of newly created employee
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        default:
          description: error creating employee
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /employee/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: id of the employee
        schema:
          type: integer
          minimum: 1
    get:
      summary: Gets the employee information by the employee id
      operationId: employeeGetById
      tags:
        - employee
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        default:
          description: error getting employee by id
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/ErrorModel'
components:
  schemas:
    EmployeeState:
      description: the state of the employee in the hiring process
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - ADDED
            - IN-CHECK
            - APPROVED
            - ACTIVE
          default: ADDED
    Employee:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          minimum: 1
        name:
          type: string
        age:
          type: integer
          minimum: 1
          maximum: 200
        contractInformation:
          type: string
        state:
          type: '#/EmployeeState'
    ErrorModel:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
        code:
          type: integer
          minimum: 100
          maximum: 600
